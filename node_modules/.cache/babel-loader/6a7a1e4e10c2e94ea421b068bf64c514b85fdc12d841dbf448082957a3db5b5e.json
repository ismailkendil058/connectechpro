{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\connectechpro\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    user,\n    profile,\n    loading,\n    isAuthenticated\n  } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user has required role\n  if (allowedRoles.length > 0 && profile) {\n    const hasRequiredRole = allowedRoles.includes(profile.role);\n    if (!hasRequiredRole) {\n      // Redirect based on user role\n      if (profile.role === 'admin') {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  }\n  return children;\n};\n_s(ProtectedRoute, \"gTar1L5pYHzDclyE3NB5wr9Tm7c=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","profile","loading","isAuthenticated","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","length","hasRequiredRole","includes","role","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/connectechpro/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\r\n  const { user, profile, loading, isAuthenticated } = useAuth();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Check if user has required role\r\n  if (allowedRoles.length > 0 && profile) {\r\n    const hasRequiredRole = allowedRoles.includes(profile.role);\r\n    if (!hasRequiredRole) {\r\n      // Redirect based on user role\r\n      if (profile.role === 'admin') {\r\n        return <Navigate to=\"/admin\" replace />;\r\n      } else {\r\n        return <Navigate to=\"/dashboard\" replace />;\r\n      }\r\n    }\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;;EAE7D;EACA,IAAIS,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKS,SAAS,EAAC,+CAA+C;MAAAP,QAAA,eAC5DF,OAAA;QAAKS,SAAS,EAAC;MAAmE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACL,eAAe,EAAE;IACpB,oBAAOR,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIV,YAAY,CAACa,MAAM,GAAG,CAAC,IAAIV,OAAO,EAAE;IACtC,MAAMW,eAAe,GAAGd,YAAY,CAACe,QAAQ,CAACZ,OAAO,CAACa,IAAI,CAAC;IAC3D,IAAI,CAACF,eAAe,EAAE;MACpB;MACA,IAAIX,OAAO,CAACa,IAAI,KAAK,OAAO,EAAE;QAC5B,oBAAOnB,OAAA,CAACH,QAAQ;UAACiB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC,CAAC,MAAM;QACL,oBAAOb,OAAA,CAACH,QAAQ;UAACiB,EAAE,EAAC,YAAY;UAACC,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7C;IACF;EACF;EAEA,OAAOX,QAAQ;AACjB,CAAC;AAACE,EAAA,CA/BIH,cAAc;EAAA,QACkCH,OAAO;AAAA;AAAAsB,EAAA,GADvDnB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}