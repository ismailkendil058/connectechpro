{"ast":null,"code":"import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n// Utility function to merge Tailwind classes\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\n// Format currency in DZD\nexport function formatCurrency(amount) {\n  return new Intl.NumberFormat('ar-DZ', {\n    style: 'currency',\n    currency: 'DZD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n}\n\n// Calculate discount amount\nexport function calculateDiscount(originalPrice, discountPercent) {\n  return originalPrice * discountPercent / 100;\n}\n\n// Calculate final price after discount\nexport function calculateFinalPrice(originalPrice, discountPercent) {\n  const discount = calculateDiscount(originalPrice, discountPercent);\n  return originalPrice - discount;\n}\n\n// Format date\nexport function formatDate(date) {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n}\n\n// Format time\nexport function formatTime(date) {\n  return new Date(date).toLocaleTimeString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n// Calculate percentage\nexport function calculatePercentage(part, total) {\n  return Math.round(part / total * 100);\n}\n\n// Generate random ID\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n// Validate email\nexport function isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\n// Validate password strength\nexport function validatePassword(password) {\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  return {\n    isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar,\n    errors: {\n      length: password.length < minLength,\n      uppercase: !hasUpperCase,\n      lowercase: !hasLowerCase,\n      numbers: !hasNumbers,\n      special: !hasSpecialChar\n    }\n  };\n}\n\n// Debounce function\nexport function debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Local storage helpers\nexport const storage = {\n  get: key => {\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch {\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch {\n      // Handle error silently\n    }\n  },\n  remove: key => {\n    localStorage.removeItem(key);\n  }\n};","map":{"version":3,"names":["clsx","twMerge","cn","inputs","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","calculateDiscount","originalPrice","discountPercent","calculateFinalPrice","discount","formatDate","date","Date","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","calculatePercentage","part","total","Math","round","generateId","random","toString","substr","isValidEmail","email","emailRegex","test","validatePassword","password","minLength","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","isValid","length","errors","uppercase","lowercase","numbers","special","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","storage","get","key","JSON","parse","localStorage","getItem","set","value","setItem","stringify","remove","removeItem"],"sources":["C:/Users/admin/Desktop/connectechpro/src/lib/utils.js"],"sourcesContent":["import { clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\n// Utility function to merge Tailwind classes\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\n// Format currency in DZD\r\nexport function formatCurrency(amount) {\r\n  return new Intl.NumberFormat('ar-DZ', {\r\n    style: 'currency',\r\n    currency: 'DZD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(amount);\r\n}\r\n\r\n// Calculate discount amount\r\nexport function calculateDiscount(originalPrice, discountPercent) {\r\n  return (originalPrice * discountPercent) / 100;\r\n}\r\n\r\n// Calculate final price after discount\r\nexport function calculateFinalPrice(originalPrice, discountPercent) {\r\n  const discount = calculateDiscount(originalPrice, discountPercent);\r\n  return originalPrice - discount;\r\n}\r\n\r\n// Format date\r\nexport function formatDate(date) {\r\n  return new Date(date).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n}\r\n\r\n// Format time\r\nexport function formatTime(date) {\r\n  return new Date(date).toLocaleTimeString('en-US', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n}\r\n\r\n// Calculate percentage\r\nexport function calculatePercentage(part, total) {\r\n  return Math.round((part / total) * 100);\r\n}\r\n\r\n// Generate random ID\r\nexport function generateId() {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\n// Validate email\r\nexport function isValidEmail(email) {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\n// Validate password strength\r\nexport function validatePassword(password) {\r\n  const minLength = 8;\r\n  const hasUpperCase = /[A-Z]/.test(password);\r\n  const hasLowerCase = /[a-z]/.test(password);\r\n  const hasNumbers = /\\d/.test(password);\r\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n\r\n  return {\r\n    isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar,\r\n    errors: {\r\n      length: password.length < minLength,\r\n      uppercase: !hasUpperCase,\r\n      lowercase: !hasLowerCase,\r\n      numbers: !hasNumbers,\r\n      special: !hasSpecialChar,\r\n    }\r\n  };\r\n}\r\n\r\n// Debounce function\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n// Local storage helpers\r\nexport const storage = {\r\n  get: (key) => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key));\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch {\r\n      // Handle error silently\r\n    }\r\n  },\r\n  remove: (key) => {\r\n    localStorage.removeItem(key);\r\n  },\r\n}; "],"mappings":"AAAA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,OAAO,QAAQ,gBAAgB;;AAExC;AACA,OAAO,SAASC,EAAEA,CAAC,GAAGC,MAAM,EAAE;EAC5B,OAAOF,OAAO,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC;AAC9B;;AAEA;AACA,OAAO,SAASC,cAAcA,CAACC,MAAM,EAAE;EACrC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC;AACnB;;AAEA;AACA,OAAO,SAASQ,iBAAiBA,CAACC,aAAa,EAAEC,eAAe,EAAE;EAChE,OAAQD,aAAa,GAAGC,eAAe,GAAI,GAAG;AAChD;;AAEA;AACA,OAAO,SAASC,mBAAmBA,CAACF,aAAa,EAAEC,eAAe,EAAE;EAClE,MAAME,QAAQ,GAAGJ,iBAAiB,CAACC,aAAa,EAAEC,eAAe,CAAC;EAClE,OAAOD,aAAa,GAAGG,QAAQ;AACjC;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAE;EAC/B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;IAChDC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACN,IAAI,EAAE;EAC/B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACO,kBAAkB,CAAC,OAAO,EAAE;IAChDC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC/C,OAAOC,IAAI,CAACC,KAAK,CAAEH,IAAI,GAAGC,KAAK,GAAI,GAAG,CAAC;AACzC;;AAEA;AACA,OAAO,SAASG,UAAUA,CAAA,EAAG;EAC3B,OAAOF,IAAI,CAACG,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD;;AAEA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B;;AAEA;AACA,OAAO,SAASG,gBAAgBA,CAACC,QAAQ,EAAE;EACzC,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,YAAY,GAAG,OAAO,CAACJ,IAAI,CAACE,QAAQ,CAAC;EAC3C,MAAMG,YAAY,GAAG,OAAO,CAACL,IAAI,CAACE,QAAQ,CAAC;EAC3C,MAAMI,UAAU,GAAG,IAAI,CAACN,IAAI,CAACE,QAAQ,CAAC;EACtC,MAAMK,cAAc,GAAG,wBAAwB,CAACP,IAAI,CAACE,QAAQ,CAAC;EAE9D,OAAO;IACLM,OAAO,EAAEN,QAAQ,CAACO,MAAM,IAAIN,SAAS,IAAIC,YAAY,IAAIC,YAAY,IAAIC,UAAU,IAAIC,cAAc;IACrGG,MAAM,EAAE;MACND,MAAM,EAAEP,QAAQ,CAACO,MAAM,GAAGN,SAAS;MACnCQ,SAAS,EAAE,CAACP,YAAY;MACxBQ,SAAS,EAAE,CAACP,YAAY;MACxBQ,OAAO,EAAE,CAACP,UAAU;MACpBQ,OAAO,EAAE,CAACP;IACZ;EACF,CAAC;AACH;;AAEA;AACA,OAAO,SAASQ,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACnC,IAAIC,OAAO;EACX,OAAO,SAASC,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;IACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBC,YAAY,CAACJ,OAAO,CAAC;MACrBF,IAAI,CAAC,GAAGI,IAAI,CAAC;IACf,CAAC;IACDE,YAAY,CAACJ,OAAO,CAAC;IACrBA,OAAO,GAAGK,UAAU,CAACF,KAAK,EAAEJ,IAAI,CAAC;EACnC,CAAC;AACH;;AAEA;AACA,OAAO,MAAMO,OAAO,GAAG;EACrBC,GAAG,EAAGC,GAAG,IAAK;IACZ,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC,CAAC;IAC9C,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC;EACDK,GAAG,EAAEA,CAACL,GAAG,EAAEM,KAAK,KAAK;IACnB,IAAI;MACFH,YAAY,CAACI,OAAO,CAACP,GAAG,EAAEC,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC,CAAC;IAClD,CAAC,CAAC,MAAM;MACN;IAAA;EAEJ,CAAC;EACDG,MAAM,EAAGT,GAAG,IAAK;IACfG,YAAY,CAACO,UAAU,CAACV,GAAG,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}